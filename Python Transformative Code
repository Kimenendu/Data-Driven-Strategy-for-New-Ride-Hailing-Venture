 # 1. DATETIME DIMENSION 
    datetime_dim = (
        df[datetime_cols]
        .drop_duplicates()
        .assign(
            pick_hour=lambda x: x['tpep_pickup_datetime'].dt.hour,
            pick_day=lambda x: x['tpep_pickup_datetime'].dt.day,
            pick_month=lambda x: x['tpep_pickup_datetime'].dt.month,
            pick_year=lambda x: x['tpep_pickup_datetime'].dt.year,
            pick_weekday=lambda x: x['tpep_pickup_datetime'].dt.weekday,
            drop_hour=lambda x: x['tpep_dropoff_datetime'].dt.hour,
            drop_day=lambda x: x['tpep_dropoff_datetime'].dt.day,
            drop_month=lambda x: x['tpep_dropoff_datetime'].dt.month,
            drop_year=lambda x: x['tpep_dropoff_datetime'].dt.year,
            drop_weekday=lambda x: x['tpep_dropoff_datetime'].dt.weekday,
            datetime_id=lambda x: x.index
        )
        [['datetime_id', 'tpep_pickup_datetime', 'pick_hour', 'pick_day', 
          'pick_month', 'pick_year', 'pick_weekday', 'tpep_dropoff_datetime',
          'drop_hour', 'drop_day', 'drop_month', 'drop_year', 'drop_weekday']]
    )

    # 2. PASSENGER COUNT DIMENSION
    passenger_count_dim = (
        df[['passenger_count']]
        .drop_duplicates()
        .assign(passenger_count_id=lambda x: x.index)
        [['passenger_count_id', 'passenger_count']]
    )

    # 3. TRIP DISTANCE DIMENSION
    trip_distance_dim = (
        df[['trip_distance']]
        .drop_duplicates()
        .assign(trip_distance_id=lambda x: x.index)
        [['trip_distance_id', 'trip_distance']]
    )

    # 4. RATE CODE DIMENSION 
    rate_code_type = {
        1: "Standard rate",
        2: "JFK",
        3: "Newark",
        4: "Nassau or westchester",
        5: "Negotiated fare",
        6: "Group ride"
    }
    rate_code_dim = (
        df[['RatecodeID']]
        .drop_duplicates()
        .assign(
            rate_code_id=lambda x: x.index,
            rate_code_name=lambda x: x['RatecodeID'].map(rate_code_type)
        )
        [['rate_code_id', 'RatecodeID', 'rate_code_name']]
    )

    # 5. LOCATION DIMENSIONS 
    location_cols = ['pickup_longitude', 'pickup_latitude', 
                    'dropoff_longitude', 'dropoff_latitude']
    
    pickup_loc = (
        df[['pickup_longitude', 'pickup_latitude']]
        .drop_duplicates()
        .assign(pickup_location_id=lambda x: x.index)
    )
    
    dropoff_loc = (
        df[['dropoff_longitude', 'dropoff_latitude']]
        .drop_duplicates()
        .assign(dropoff_location_id=lambda x: x.index)
    )

    # 6. PAYMENT TYPE DIMENSION
    payment_type_name = {
        1: "Credit card",
        2: "Cash",
        3: "No charge",
        4: "Dispute",
        5: "Unknown",
        6: "Voided trip"
    }
    payment_type_dim = (
        df[['payment_type']]
        .drop_duplicates()
        .assign(
            payment_type_id=lambda x: x.index,
            payment_type_name=lambda x: x['payment_type'].map(payment_type_name)
        )
        [['payment_type_id', 'payment_type', 'payment_type_name']]
    )

    # 7. FACT TABLE
    fact_table = (
        df
        .merge(passenger_count_dim, on='passenger_count')
        .merge(trip_distance_dim, on='trip_distance')
        .merge(rate_code_dim, on='RatecodeID')
        .merge(
            pickup_loc[['pickup_longitude', 'pickup_latitude', 'pickup_location_id']],
            on=['pickup_longitude', 'pickup_latitude']
        )
        .merge(
            dropoff_loc[['dropoff_longitude', 'dropoff_latitude', 'dropoff_location_id']],
            on=['dropoff_longitude', 'dropoff_latitude']
        )
        .merge(
            datetime_dim[['tpep_pickup_datetime', 'tpep_dropoff_datetime', 'datetime_id']],
            on=['tpep_pickup_datetime', 'tpep_dropoff_datetime']
        )
        .merge(payment_type_dim, on='payment_type')
        [[
            'VendorID', 'datetime_id', 'passenger_count_id', 'trip_distance_id',
            'rate_code_id', 'store_and_fwd_flag', 'pickup_location_id',
            'dropoff_location_id', 'payment_type_id', 'fare_amount', 'extra',
            'mta_tax', 'tip_amount', 'tolls_amount', 'improvement_surcharge',
            'total_amount'
        ]]
    )
